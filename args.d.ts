export interface ArgsMap {
    createNodeArray: ["elements", 0] | ["hasTrailingComma", 1];
    createNumericLiteral: ["value", 0] | ["numericLiteralFlags", 1];
    createBigIntLiteral: ["value", 0];
    createStringLiteral: ["text", 0] | ["isSingleQuote", 1] | ["hasExtendedUnicodeEscape", 2];
    createStringLiteralFromNode: ["sourceNode", 0];
    createRegularExpressionLiteral: ["text", 0];
    createLiteralLikeNode: ["kind", 0] | ["text", 1];
    createIdentifier: ["text", 0] | ["typeArguments", 1] | ["originalKeywordKind", 2];
    updateIdentifier: ["node", 0] | ["typeArguments", 1];
    createTempVariable: ["recordTempVariable", 0] | ["reservedInNestedScopes", 1];
    createLoopVariable: ["reservedInNestedScopes", 0];
    createUniqueName: ["text", 0] | ["flags", 1];
    getGeneratedNameForNode: ["node", 0] | ["flags", 1];
    createPrivateIdentifier: ["text", 0];
    createToken: ["token", 0];
    createSuper: undefined;
    createThis: undefined;
    createNull: undefined;
    createTrue: undefined;
    createFalse: undefined;
    createModifier: ["kind", 0];
    createModifiersFromModifierFlags: ["flags", 0];
    createQualifiedName: ["left", 0] | ["right", 1];
    updateQualifiedName: ["node", 0] | ["left", 1] | ["right", 2];
    createComputedPropertyName: ["expression", 0];
    updateComputedPropertyName: ["node", 0] | ["expression", 1];
    createTypeParameterDeclaration: ["name", 0] | ["constraint", 1] | ["defaultType", 2];
    updateTypeParameterDeclaration: ["node", 0] | ["name", 1] | ["constraint", 2] | ["defaultType", 3];
    createParameterDeclaration: ["decorators", 0] | ["modifiers", 1] | ["dotDotDotToken", 2] | ["name", 3] | ["questionToken", 4] | ["type", 5] | ["initializer", 6];
    updateParameterDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["dotDotDotToken", 3] | ["name", 4] | ["questionToken", 5] | ["type", 6] | ["initializer", 7];
    createDecorator: ["expression", 0];
    updateDecorator: ["node", 0] | ["expression", 1];
    createPropertySignature: ["modifiers", 0] | ["name", 1] | ["questionToken", 2] | ["type", 3];
    updatePropertySignature: ["node", 0] | ["modifiers", 1] | ["name", 2] | ["questionToken", 3] | ["type", 4];
    createPropertyDeclaration: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["questionOrExclamationToken", 3] | ["type", 4] | ["initializer", 5];
    updatePropertyDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["questionOrExclamationToken", 4] | ["type", 5] | ["initializer", 6];
    createMethodSignature: ["modifiers", 0] | ["name", 1] | ["questionToken", 2] | ["typeParameters", 3] | ["parameters", 4] | ["type", 5];
    updateMethodSignature: ["node", 0] | ["modifiers", 1] | ["name", 2] | ["questionToken", 3] | ["typeParameters", 4] | ["parameters", 5] | ["type", 6];
    createMethodDeclaration: ["decorators", 0] | ["modifiers", 1] | ["asteriskToken", 2] | ["name", 3] | ["questionToken", 4] | ["typeParameters", 5] | ["parameters", 6] | ["type", 7] | ["body", 8];
    updateMethodDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["asteriskToken", 3] | ["name", 4] | ["questionToken", 5] | ["typeParameters", 6] | ["parameters", 7] | ["type", 8] | ["body", 9];
    createConstructorDeclaration: ["decorators", 0] | ["modifiers", 1] | ["parameters", 2] | ["body", 3];
    updateConstructorDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["parameters", 3] | ["body", 4];
    createGetAccessorDeclaration: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["parameters", 3] | ["type", 4] | ["body", 5];
    updateGetAccessorDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["parameters", 4] | ["type", 5] | ["body", 6];
    createSetAccessorDeclaration: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["parameters", 3] | ["body", 4];
    updateSetAccessorDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["parameters", 4] | ["body", 5];
    createCallSignature: ["typeParameters", 0] | ["parameters", 1] | ["type", 2];
    updateCallSignature: ["node", 0] | ["typeParameters", 1] | ["parameters", 2] | ["type", 3];
    createConstructSignature: ["typeParameters", 0] | ["parameters", 1] | ["type", 2];
    updateConstructSignature: ["node", 0] | ["typeParameters", 1] | ["parameters", 2] | ["type", 3];
    createIndexSignature: ["decorators", 0] | ["modifiers", 1] | ["parameters", 2] | ["type", 3];
    updateIndexSignature: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["parameters", 3] | ["type", 4];
    createClassStaticBlockDeclaration: ["decorators", 0] | ["modifiers", 1] | ["body", 2];
    updateClassStaticBlockDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["body", 3];
    createTemplateLiteralTypeSpan: ["type", 0] | ["literal", 1];
    updateTemplateLiteralTypeSpan: ["node", 0] | ["type", 1] | ["literal", 2];
    createKeywordTypeNode: ["kind", 0];
    createTypePredicateNode: ["assertsModifier", 0] | ["parameterName", 1] | ["type", 2];
    updateTypePredicateNode: ["node", 0] | ["assertsModifier", 1] | ["parameterName", 2] | ["type", 3];
    createTypeReferenceNode: ["typeName", 0] | ["typeArguments", 1];
    updateTypeReferenceNode: ["node", 0] | ["typeName", 1] | ["typeArguments", 2];
    createFunctionTypeNode: ["typeParameters", 0] | ["parameters", 1] | ["type", 2];
    updateFunctionTypeNode: ["node", 0] | ["typeParameters", 1] | ["parameters", 2] | ["type", 3];
    createConstructorTypeNode: undefined;
    updateConstructorTypeNode: undefined;
    createTypeQueryNode: ["exprName", 0];
    updateTypeQueryNode: ["node", 0] | ["exprName", 1];
    createTypeLiteralNode: ["members", 0];
    updateTypeLiteralNode: ["node", 0] | ["members", 1];
    createArrayTypeNode: ["elementType", 0];
    updateArrayTypeNode: ["node", 0] | ["elementType", 1];
    createTupleTypeNode: ["elements", 0];
    updateTupleTypeNode: ["node", 0] | ["elements", 1];
    createNamedTupleMember: ["dotDotDotToken", 0] | ["name", 1] | ["questionToken", 2] | ["type", 3];
    updateNamedTupleMember: ["node", 0] | ["dotDotDotToken", 1] | ["name", 2] | ["questionToken", 3] | ["type", 4];
    createOptionalTypeNode: ["type", 0];
    updateOptionalTypeNode: ["node", 0] | ["type", 1];
    createRestTypeNode: ["type", 0];
    updateRestTypeNode: ["node", 0] | ["type", 1];
    createUnionTypeNode: ["types", 0];
    updateUnionTypeNode: ["node", 0] | ["types", 1];
    createIntersectionTypeNode: ["types", 0];
    updateIntersectionTypeNode: ["node", 0] | ["types", 1];
    createConditionalTypeNode: ["checkType", 0] | ["extendsType", 1] | ["trueType", 2] | ["falseType", 3];
    updateConditionalTypeNode: ["node", 0] | ["checkType", 1] | ["extendsType", 2] | ["trueType", 3] | ["falseType", 4];
    createInferTypeNode: ["typeParameter", 0];
    updateInferTypeNode: ["node", 0] | ["typeParameter", 1];
    createImportTypeNode: ["argument", 0] | ["qualifier", 1] | ["typeArguments", 2] | ["isTypeOf", 3];
    updateImportTypeNode: ["node", 0] | ["argument", 1] | ["qualifier", 2] | ["typeArguments", 3] | ["isTypeOf", 4];
    createParenthesizedType: ["type", 0];
    updateParenthesizedType: ["node", 0] | ["type", 1];
    createThisTypeNode: undefined;
    createTypeOperatorNode: ["operator", 0] | ["type", 1];
    updateTypeOperatorNode: ["node", 0] | ["type", 1];
    createIndexedAccessTypeNode: ["objectType", 0] | ["indexType", 1];
    updateIndexedAccessTypeNode: ["node", 0] | ["objectType", 1] | ["indexType", 2];
    createMappedTypeNode: ["readonlyToken", 0] | ["typeParameter", 1] | ["nameType", 2] | ["questionToken", 3] | ["type", 4] | ["members", 5];
    updateMappedTypeNode: ["node", 0] | ["readonlyToken", 1] | ["typeParameter", 2] | ["nameType", 3] | ["questionToken", 4] | ["type", 5] | ["members", 6];
    createLiteralTypeNode: ["literal", 0];
    updateLiteralTypeNode: ["node", 0] | ["literal", 1];
    createTemplateLiteralType: ["head", 0] | ["templateSpans", 1];
    updateTemplateLiteralType: ["node", 0] | ["head", 1] | ["templateSpans", 2];
    createObjectBindingPattern: ["elements", 0];
    updateObjectBindingPattern: ["node", 0] | ["elements", 1];
    createArrayBindingPattern: ["elements", 0];
    updateArrayBindingPattern: ["node", 0] | ["elements", 1];
    createBindingElement: ["dotDotDotToken", 0] | ["propertyName", 1] | ["name", 2] | ["initializer", 3];
    updateBindingElement: ["node", 0] | ["dotDotDotToken", 1] | ["propertyName", 2] | ["name", 3] | ["initializer", 4];
    createArrayLiteralExpression: ["elements", 0] | ["multiLine", 1];
    updateArrayLiteralExpression: ["node", 0] | ["elements", 1];
    createObjectLiteralExpression: ["properties", 0] | ["multiLine", 1];
    updateObjectLiteralExpression: ["node", 0] | ["properties", 1];
    createPropertyAccessExpression: ["expression", 0] | ["name", 1];
    updatePropertyAccessExpression: ["node", 0] | ["expression", 1] | ["name", 2];
    createPropertyAccessChain: ["expression", 0] | ["questionDotToken", 1] | ["name", 2];
    updatePropertyAccessChain: ["node", 0] | ["expression", 1] | ["questionDotToken", 2] | ["name", 3];
    createElementAccessExpression: ["expression", 0] | ["index", 1];
    updateElementAccessExpression: ["node", 0] | ["expression", 1] | ["argumentExpression", 2];
    createElementAccessChain: ["expression", 0] | ["questionDotToken", 1] | ["index", 2];
    updateElementAccessChain: ["node", 0] | ["expression", 1] | ["questionDotToken", 2] | ["argumentExpression", 3];
    createCallExpression: ["expression", 0] | ["typeArguments", 1] | ["argumentsArray", 2];
    updateCallExpression: ["node", 0] | ["expression", 1] | ["typeArguments", 2] | ["argumentsArray", 3];
    createCallChain: ["expression", 0] | ["questionDotToken", 1] | ["typeArguments", 2] | ["argumentsArray", 3];
    updateCallChain: ["node", 0] | ["expression", 1] | ["questionDotToken", 2] | ["typeArguments", 3] | ["argumentsArray", 4];
    createNewExpression: ["expression", 0] | ["typeArguments", 1] | ["argumentsArray", 2];
    updateNewExpression: ["node", 0] | ["expression", 1] | ["typeArguments", 2] | ["argumentsArray", 3];
    createTaggedTemplateExpression: ["tag", 0] | ["typeArguments", 1] | ["template", 2];
    updateTaggedTemplateExpression: ["node", 0] | ["tag", 1] | ["typeArguments", 2] | ["template", 3];
    createTypeAssertion: ["type", 0] | ["expression", 1];
    updateTypeAssertion: ["node", 0] | ["type", 1] | ["expression", 2];
    createParenthesizedExpression: ["expression", 0];
    updateParenthesizedExpression: ["node", 0] | ["expression", 1];
    createFunctionExpression: ["modifiers", 0] | ["asteriskToken", 1] | ["name", 2] | ["typeParameters", 3] | ["parameters", 4] | ["type", 5] | ["body", 6];
    updateFunctionExpression: ["node", 0] | ["modifiers", 1] | ["asteriskToken", 2] | ["name", 3] | ["typeParameters", 4] | ["parameters", 5] | ["type", 6] | ["body", 7];
    createArrowFunction: ["modifiers", 0] | ["typeParameters", 1] | ["parameters", 2] | ["type", 3] | ["equalsGreaterThanToken", 4] | ["body", 5];
    updateArrowFunction: ["node", 0] | ["modifiers", 1] | ["typeParameters", 2] | ["parameters", 3] | ["type", 4] | ["equalsGreaterThanToken", 5] | ["body", 6];
    createDeleteExpression: ["expression", 0];
    updateDeleteExpression: ["node", 0] | ["expression", 1];
    createTypeOfExpression: ["expression", 0];
    updateTypeOfExpression: ["node", 0] | ["expression", 1];
    createVoidExpression: ["expression", 0];
    updateVoidExpression: ["node", 0] | ["expression", 1];
    createAwaitExpression: ["expression", 0];
    updateAwaitExpression: ["node", 0] | ["expression", 1];
    createPrefixUnaryExpression: ["operator", 0] | ["operand", 1];
    updatePrefixUnaryExpression: ["node", 0] | ["operand", 1];
    createPostfixUnaryExpression: ["operand", 0] | ["operator", 1];
    updatePostfixUnaryExpression: ["node", 0] | ["operand", 1];
    createBinaryExpression: ["left", 0] | ["operator", 1] | ["right", 2];
    updateBinaryExpression: ["node", 0] | ["left", 1] | ["operator", 2] | ["right", 3];
    createConditionalExpression: ["condition", 0] | ["questionToken", 1] | ["whenTrue", 2] | ["colonToken", 3] | ["whenFalse", 4];
    updateConditionalExpression: ["node", 0] | ["condition", 1] | ["questionToken", 2] | ["whenTrue", 3] | ["colonToken", 4] | ["whenFalse", 5];
    createTemplateExpression: ["head", 0] | ["templateSpans", 1];
    updateTemplateExpression: ["node", 0] | ["head", 1] | ["templateSpans", 2];
    createTemplateHead: ["text", 0] | ["rawText", 1] | ["templateFlags", 2];
    createTemplateMiddle: ["text", 0] | ["rawText", 1] | ["templateFlags", 2];
    createTemplateTail: ["text", 0] | ["rawText", 1] | ["templateFlags", 2];
    createNoSubstitutionTemplateLiteral: ["text", 0] | ["rawText", 1] | ["templateFlags", 2];
    createTemplateLiteralLikeNode: ["kind", 0] | ["text", 1] | ["rawText", 2] | ["templateFlags", 3];
    createYieldExpression: ["asteriskToken", 0] | ["expression", 1];
    updateYieldExpression: ["node", 0] | ["asteriskToken", 1] | ["expression", 2];
    createSpreadElement: ["expression", 0];
    updateSpreadElement: ["node", 0] | ["expression", 1];
    createClassExpression: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["typeParameters", 3] | ["heritageClauses", 4] | ["members", 5];
    updateClassExpression: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["typeParameters", 4] | ["heritageClauses", 5] | ["members", 6];
    createOmittedExpression: undefined;
    createExpressionWithTypeArguments: ["expression", 0] | ["typeArguments", 1];
    updateExpressionWithTypeArguments: ["node", 0] | ["expression", 1] | ["typeArguments", 2];
    createAsExpression: ["expression", 0] | ["type", 1];
    updateAsExpression: ["node", 0] | ["expression", 1] | ["type", 2];
    createNonNullExpression: ["expression", 0];
    updateNonNullExpression: ["node", 0] | ["expression", 1];
    createNonNullChain: ["expression", 0];
    updateNonNullChain: ["node", 0] | ["expression", 1];
    createMetaProperty: ["keywordToken", 0] | ["name", 1];
    updateMetaProperty: ["node", 0] | ["name", 1];
    createTemplateSpan: ["expression", 0] | ["literal", 1];
    updateTemplateSpan: ["node", 0] | ["expression", 1] | ["literal", 2];
    createSemicolonClassElement: undefined;
    createBlock: ["statements", 0] | ["multiLine", 1];
    updateBlock: ["node", 0] | ["statements", 1];
    createVariableStatement: ["modifiers", 0] | ["declarationList", 1];
    updateVariableStatement: ["node", 0] | ["modifiers", 1] | ["declarationList", 2];
    createEmptyStatement: undefined;
    createExpressionStatement: ["expression", 0];
    updateExpressionStatement: ["node", 0] | ["expression", 1];
    createIfStatement: ["expression", 0] | ["thenStatement", 1] | ["elseStatement", 2];
    updateIfStatement: ["node", 0] | ["expression", 1] | ["thenStatement", 2] | ["elseStatement", 3];
    createDoStatement: ["statement", 0] | ["expression", 1];
    updateDoStatement: ["node", 0] | ["statement", 1] | ["expression", 2];
    createWhileStatement: ["expression", 0] | ["statement", 1];
    updateWhileStatement: ["node", 0] | ["expression", 1] | ["statement", 2];
    createForStatement: ["initializer", 0] | ["condition", 1] | ["incrementor", 2] | ["statement", 3];
    updateForStatement: ["node", 0] | ["initializer", 1] | ["condition", 2] | ["incrementor", 3] | ["statement", 4];
    createForInStatement: ["initializer", 0] | ["expression", 1] | ["statement", 2];
    updateForInStatement: ["node", 0] | ["initializer", 1] | ["expression", 2] | ["statement", 3];
    createForOfStatement: ["awaitModifier", 0] | ["initializer", 1] | ["expression", 2] | ["statement", 3];
    updateForOfStatement: ["node", 0] | ["awaitModifier", 1] | ["initializer", 2] | ["expression", 3] | ["statement", 4];
    createContinueStatement: ["label", 0];
    updateContinueStatement: ["node", 0] | ["label", 1];
    createBreakStatement: ["label", 0];
    updateBreakStatement: ["node", 0] | ["label", 1];
    createReturnStatement: ["expression", 0];
    updateReturnStatement: ["node", 0] | ["expression", 1];
    createWithStatement: ["expression", 0] | ["statement", 1];
    updateWithStatement: ["node", 0] | ["expression", 1] | ["statement", 2];
    createSwitchStatement: ["expression", 0] | ["caseBlock", 1];
    updateSwitchStatement: ["node", 0] | ["expression", 1] | ["caseBlock", 2];
    createLabeledStatement: ["label", 0] | ["statement", 1];
    updateLabeledStatement: ["node", 0] | ["label", 1] | ["statement", 2];
    createThrowStatement: ["expression", 0];
    updateThrowStatement: ["node", 0] | ["expression", 1];
    createTryStatement: ["tryBlock", 0] | ["catchClause", 1] | ["finallyBlock", 2];
    updateTryStatement: ["node", 0] | ["tryBlock", 1] | ["catchClause", 2] | ["finallyBlock", 3];
    createDebuggerStatement: undefined;
    createVariableDeclaration: ["name", 0] | ["exclamationToken", 1] | ["type", 2] | ["initializer", 3];
    updateVariableDeclaration: ["node", 0] | ["name", 1] | ["exclamationToken", 2] | ["type", 3] | ["initializer", 4];
    createVariableDeclarationList: ["declarations", 0] | ["flags", 1];
    updateVariableDeclarationList: ["node", 0] | ["declarations", 1];
    createFunctionDeclaration: ["decorators", 0] | ["modifiers", 1] | ["asteriskToken", 2] | ["name", 3] | ["typeParameters", 4] | ["parameters", 5] | ["type", 6] | ["body", 7];
    updateFunctionDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["asteriskToken", 3] | ["name", 4] | ["typeParameters", 5] | ["parameters", 6] | ["type", 7] | ["body", 8];
    createClassDeclaration: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["typeParameters", 3] | ["heritageClauses", 4] | ["members", 5];
    updateClassDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["typeParameters", 4] | ["heritageClauses", 5] | ["members", 6];
    createInterfaceDeclaration: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["typeParameters", 3] | ["heritageClauses", 4] | ["members", 5];
    updateInterfaceDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["typeParameters", 4] | ["heritageClauses", 5] | ["members", 6];
    createTypeAliasDeclaration: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["typeParameters", 3] | ["type", 4];
    updateTypeAliasDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["typeParameters", 4] | ["type", 5];
    createEnumDeclaration: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["members", 3];
    updateEnumDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["members", 4];
    createModuleDeclaration: ["decorators", 0] | ["modifiers", 1] | ["name", 2] | ["body", 3] | ["flags", 4];
    updateModuleDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["name", 3] | ["body", 4];
    createModuleBlock: ["statements", 0];
    updateModuleBlock: ["node", 0] | ["statements", 1];
    createCaseBlock: ["clauses", 0];
    updateCaseBlock: ["node", 0] | ["clauses", 1];
    createNamespaceExportDeclaration: ["name", 0];
    updateNamespaceExportDeclaration: ["node", 0] | ["name", 1];
    createImportEqualsDeclaration: ["decorators", 0] | ["modifiers", 1] | ["isTypeOnly", 2] | ["name", 3] | ["moduleReference", 4];
    updateImportEqualsDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["isTypeOnly", 3] | ["name", 4] | ["moduleReference", 5];
    createImportDeclaration: ["decorators", 0] | ["modifiers", 1] | ["importClause", 2] | ["moduleSpecifier", 3] | ["assertClause", 4];
    updateImportDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["importClause", 3] | ["moduleSpecifier", 4] | ["assertClause", 5];
    createImportClause: ["isTypeOnly", 0] | ["name", 1] | ["namedBindings", 2];
    updateImportClause: ["node", 0] | ["isTypeOnly", 1] | ["name", 2] | ["namedBindings", 3];
    createAssertClause: ["elements", 0] | ["multiLine", 1];
    updateAssertClause: ["node", 0] | ["elements", 1] | ["multiLine", 2];
    createAssertEntry: ["name", 0] | ["value", 1];
    updateAssertEntry: ["node", 0] | ["name", 1] | ["value", 2];
    createNamespaceImport: ["name", 0];
    updateNamespaceImport: ["node", 0] | ["name", 1];
    createNamespaceExport: ["name", 0];
    updateNamespaceExport: ["node", 0] | ["name", 1];
    createNamedImports: ["elements", 0];
    updateNamedImports: ["node", 0] | ["elements", 1];
    createImportSpecifier: ["isTypeOnly", 0] | ["propertyName", 1] | ["name", 2];
    updateImportSpecifier: ["node", 0] | ["isTypeOnly", 1] | ["propertyName", 2] | ["name", 3];
    createExportAssignment: ["decorators", 0] | ["modifiers", 1] | ["isExportEquals", 2] | ["expression", 3];
    updateExportAssignment: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["expression", 3];
    createExportDeclaration: ["decorators", 0] | ["modifiers", 1] | ["isTypeOnly", 2] | ["exportClause", 3] | ["moduleSpecifier", 4] | ["assertClause", 5];
    updateExportDeclaration: ["node", 0] | ["decorators", 1] | ["modifiers", 2] | ["isTypeOnly", 3] | ["exportClause", 4] | ["moduleSpecifier", 5] | ["assertClause", 6];
    createNamedExports: ["elements", 0];
    updateNamedExports: ["node", 0] | ["elements", 1];
    createExportSpecifier: ["isTypeOnly", 0] | ["propertyName", 1] | ["name", 2];
    updateExportSpecifier: ["node", 0] | ["isTypeOnly", 1] | ["propertyName", 2] | ["name", 3];
    createMissingDeclaration: undefined;
    createExternalModuleReference: ["expression", 0];
    updateExternalModuleReference: ["node", 0] | ["expression", 1];
    createJSDocAllType: undefined;
    createJSDocUnknownType: undefined;
    createJSDocNonNullableType: ["type", 0];
    updateJSDocNonNullableType: ["node", 0] | ["type", 1];
    createJSDocNullableType: ["type", 0];
    updateJSDocNullableType: ["node", 0] | ["type", 1];
    createJSDocOptionalType: ["type", 0];
    updateJSDocOptionalType: ["node", 0] | ["type", 1];
    createJSDocVariadicType: ["type", 0];
    updateJSDocVariadicType: ["node", 0] | ["type", 1];
    createJSDocNamepathType: ["type", 0];
    updateJSDocNamepathType: ["node", 0] | ["type", 1];
    createJSDocFunctionType: ["parameters", 0] | ["type", 1];
    updateJSDocFunctionType: ["node", 0] | ["parameters", 1] | ["type", 2];
    createJSDocTypeLiteral: ["propertyTags", 0] | ["isArrayType", 1];
    updateJSDocTypeLiteral: ["node", 0] | ["propertyTags", 1] | ["isArrayType", 2];
    createJSDocTypeExpression: ["type", 0];
    updateJSDocTypeExpression: ["node", 0] | ["type", 1];
    createJSDocSignature: ["typeParameters", 0] | ["parameters", 1] | ["type", 2];
    updateJSDocSignature: ["node", 0] | ["typeParameters", 1] | ["parameters", 2] | ["type", 3];
    createJSDocTemplateTag: ["tagName", 0] | ["constraint", 1] | ["typeParameters", 2] | ["comment", 3];
    updateJSDocTemplateTag: ["node", 0] | ["tagName", 1] | ["constraint", 2] | ["typeParameters", 3] | ["comment", 4];
    createJSDocTypedefTag: ["tagName", 0] | ["typeExpression", 1] | ["fullName", 2] | ["comment", 3];
    updateJSDocTypedefTag: ["node", 0] | ["tagName", 1] | ["typeExpression", 2] | ["fullName", 3] | ["comment", 4];
    createJSDocParameterTag: ["tagName", 0] | ["name", 1] | ["isBracketed", 2] | ["typeExpression", 3] | ["isNameFirst", 4] | ["comment", 5];
    updateJSDocParameterTag: ["node", 0] | ["tagName", 1] | ["name", 2] | ["isBracketed", 3] | ["typeExpression", 4] | ["isNameFirst", 5] | ["comment", 6];
    createJSDocPropertyTag: ["tagName", 0] | ["name", 1] | ["isBracketed", 2] | ["typeExpression", 3] | ["isNameFirst", 4] | ["comment", 5];
    updateJSDocPropertyTag: ["node", 0] | ["tagName", 1] | ["name", 2] | ["isBracketed", 3] | ["typeExpression", 4] | ["isNameFirst", 5] | ["comment", 6];
    createJSDocCallbackTag: ["tagName", 0] | ["typeExpression", 1] | ["fullName", 2] | ["comment", 3];
    updateJSDocCallbackTag: ["node", 0] | ["tagName", 1] | ["typeExpression", 2] | ["fullName", 3] | ["comment", 4];
    createJSDocAugmentsTag: ["tagName", 0] | ["className", 1] | ["comment", 2];
    updateJSDocAugmentsTag: ["node", 0] | ["tagName", 1] | ["className", 2] | ["comment", 3];
    createJSDocImplementsTag: ["tagName", 0] | ["className", 1] | ["comment", 2];
    updateJSDocImplementsTag: ["node", 0] | ["tagName", 1] | ["className", 2] | ["comment", 3];
    createJSDocSeeTag: ["tagName", 0] | ["name", 1] | ["comment", 2];
    updateJSDocSeeTag: ["node", 0] | ["tagName", 1] | ["name", 2] | ["comment", 3];
    createJSDocNameReference: ["name", 0];
    updateJSDocNameReference: ["node", 0] | ["name", 1];
    createJSDocMemberName: ["left", 0] | ["right", 1];
    updateJSDocMemberName: ["node", 0] | ["left", 1] | ["right", 2];
    createJSDocLink: ["name", 0] | ["text", 1];
    updateJSDocLink: ["node", 0] | ["name", 1] | ["text", 2];
    createJSDocLinkCode: ["name", 0] | ["text", 1];
    updateJSDocLinkCode: ["node", 0] | ["name", 1] | ["text", 2];
    createJSDocLinkPlain: ["name", 0] | ["text", 1];
    updateJSDocLinkPlain: ["node", 0] | ["name", 1] | ["text", 2];
    createJSDocTypeTag: ["tagName", 0] | ["typeExpression", 1] | ["comment", 2];
    updateJSDocTypeTag: ["node", 0] | ["tagName", 1] | ["typeExpression", 2] | ["comment", 3];
    createJSDocReturnTag: ["tagName", 0] | ["typeExpression", 1] | ["comment", 2];
    updateJSDocReturnTag: ["node", 0] | ["tagName", 1] | ["typeExpression", 2] | ["comment", 3];
    createJSDocThisTag: ["tagName", 0] | ["typeExpression", 1] | ["comment", 2];
    updateJSDocThisTag: ["node", 0] | ["tagName", 1] | ["typeExpression", 2] | ["comment", 3];
    createJSDocEnumTag: ["tagName", 0] | ["typeExpression", 1] | ["comment", 2];
    updateJSDocEnumTag: ["node", 0] | ["tagName", 1] | ["typeExpression", 2] | ["comment", 3];
    createJSDocAuthorTag: ["tagName", 0] | ["comment", 1];
    updateJSDocAuthorTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocClassTag: ["tagName", 0] | ["comment", 1];
    updateJSDocClassTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocPublicTag: ["tagName", 0] | ["comment", 1];
    updateJSDocPublicTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocPrivateTag: ["tagName", 0] | ["comment", 1];
    updateJSDocPrivateTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocProtectedTag: ["tagName", 0] | ["comment", 1];
    updateJSDocProtectedTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocReadonlyTag: ["tagName", 0] | ["comment", 1];
    updateJSDocReadonlyTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocOverrideTag: ["tagName", 0] | ["comment", 1];
    updateJSDocOverrideTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocDeprecatedTag: ["tagName", 0] | ["comment", 1];
    updateJSDocDeprecatedTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocUnknownTag: ["tagName", 0] | ["comment", 1];
    updateJSDocUnknownTag: ["node", 0] | ["tagName", 1] | ["comment", 2];
    createJSDocText: ["text", 0];
    updateJSDocText: ["node", 0] | ["text", 1];
    createJSDocComment: ["comment", 0] | ["tags", 1];
    updateJSDocComment: ["node", 0] | ["comment", 1] | ["tags", 2];
    createJsxElement: ["openingElement", 0] | ["children", 1] | ["closingElement", 2];
    updateJsxElement: ["node", 0] | ["openingElement", 1] | ["children", 2] | ["closingElement", 3];
    createJsxSelfClosingElement: ["tagName", 0] | ["typeArguments", 1] | ["attributes", 2];
    updateJsxSelfClosingElement: ["node", 0] | ["tagName", 1] | ["typeArguments", 2] | ["attributes", 3];
    createJsxOpeningElement: ["tagName", 0] | ["typeArguments", 1] | ["attributes", 2];
    updateJsxOpeningElement: ["node", 0] | ["tagName", 1] | ["typeArguments", 2] | ["attributes", 3];
    createJsxClosingElement: ["tagName", 0];
    updateJsxClosingElement: ["node", 0] | ["tagName", 1];
    createJsxFragment: ["openingFragment", 0] | ["children", 1] | ["closingFragment", 2];
    createJsxText: ["text", 0] | ["containsOnlyTriviaWhiteSpaces", 1];
    updateJsxText: ["node", 0] | ["text", 1] | ["containsOnlyTriviaWhiteSpaces", 2];
    createJsxOpeningFragment: undefined;
    createJsxJsxClosingFragment: undefined;
    updateJsxFragment: ["node", 0] | ["openingFragment", 1] | ["children", 2] | ["closingFragment", 3];
    createJsxAttribute: ["name", 0] | ["initializer", 1];
    updateJsxAttribute: ["node", 0] | ["name", 1] | ["initializer", 2];
    createJsxAttributes: ["properties", 0];
    updateJsxAttributes: ["node", 0] | ["properties", 1];
    createJsxSpreadAttribute: ["expression", 0];
    updateJsxSpreadAttribute: ["node", 0] | ["expression", 1];
    createJsxExpression: ["dotDotDotToken", 0] | ["expression", 1];
    updateJsxExpression: ["node", 0] | ["expression", 1];
    createCaseClause: ["expression", 0] | ["statements", 1];
    updateCaseClause: ["node", 0] | ["expression", 1] | ["statements", 2];
    createDefaultClause: ["statements", 0];
    updateDefaultClause: ["node", 0] | ["statements", 1];
    createHeritageClause: ["token", 0] | ["types", 1];
    updateHeritageClause: ["node", 0] | ["types", 1];
    createCatchClause: ["variableDeclaration", 0] | ["block", 1];
    updateCatchClause: ["node", 0] | ["variableDeclaration", 1] | ["block", 2];
    createPropertyAssignment: ["name", 0] | ["initializer", 1];
    updatePropertyAssignment: ["node", 0] | ["name", 1] | ["initializer", 2];
    createShorthandPropertyAssignment: ["name", 0] | ["objectAssignmentInitializer", 1];
    updateShorthandPropertyAssignment: ["node", 0] | ["name", 1] | ["objectAssignmentInitializer", 2];
    createSpreadAssignment: ["expression", 0];
    updateSpreadAssignment: ["node", 0] | ["expression", 1];
    createEnumMember: ["name", 0] | ["initializer", 1];
    updateEnumMember: ["node", 0] | ["name", 1] | ["initializer", 2];
    createSourceFile: ["statements", 0] | ["endOfFileToken", 1] | ["flags", 2];
    updateSourceFile: ["node", 0] | ["statements", 1] | ["isDeclarationFile", 2] | ["referencedFiles", 3] | ["typeReferenceDirectives", 4] | ["hasNoDefaultLib", 5] | ["libReferenceDirectives", 6];
    createBundle: ["sourceFiles", 0] | ["prepends", 1];
    updateBundle: ["node", 0] | ["sourceFiles", 1] | ["prepends", 2];
    createUnparsedSource: ["prologues", 0] | ["syntheticReferences", 1] | ["texts", 2];
    createUnparsedPrologue: ["data", 0];
    createUnparsedPrepend: ["data", 0] | ["texts", 1];
    createUnparsedTextLike: ["data", 0] | ["internal", 1];
    createUnparsedSyntheticReference: ["section", 0];
    createInputFiles: undefined;
    createSyntheticExpression: ["type", 0] | ["isSpread", 1] | ["tupleNameSource", 2];
    createSyntaxList: ["children", 0];
    createNotEmittedStatement: ["original", 0];
    createPartiallyEmittedExpression: ["expression", 0] | ["original", 1];
    updatePartiallyEmittedExpression: ["node", 0] | ["expression", 1];
    createCommaListExpression: ["elements", 0];
    updateCommaListExpression: ["node", 0] | ["elements", 1];
    createEndOfDeclarationMarker: ["original", 0];
    createMergeDeclarationMarker: ["original", 0];
    createSyntheticReferenceExpression: ["expression", 0] | ["thisArg", 1];
    updateSyntheticReferenceExpression: ["node", 0] | ["expression", 1] | ["thisArg", 2];
    cloneNode: ["node", 0];
    createComma: ["left", 0] | ["right", 1];
    createAssignment: ["left", 0] | ["right", 1];
    createLogicalOr: ["left", 0] | ["right", 1];
    createLogicalAnd: ["left", 0] | ["right", 1];
    createBitwiseOr: ["left", 0] | ["right", 1];
    createBitwiseXor: ["left", 0] | ["right", 1];
    createBitwiseAnd: ["left", 0] | ["right", 1];
    createStrictEquality: ["left", 0] | ["right", 1];
    createStrictInequality: ["left", 0] | ["right", 1];
    createEquality: ["left", 0] | ["right", 1];
    createInequality: ["left", 0] | ["right", 1];
    createLessThan: ["left", 0] | ["right", 1];
    createLessThanEquals: ["left", 0] | ["right", 1];
    createGreaterThan: ["left", 0] | ["right", 1];
    createGreaterThanEquals: ["left", 0] | ["right", 1];
    createLeftShift: ["left", 0] | ["right", 1];
    createRightShift: ["left", 0] | ["right", 1];
    createUnsignedRightShift: ["left", 0] | ["right", 1];
    createAdd: ["left", 0] | ["right", 1];
    createSubtract: ["left", 0] | ["right", 1];
    createMultiply: ["left", 0] | ["right", 1];
    createDivide: ["left", 0] | ["right", 1];
    createModulo: ["left", 0] | ["right", 1];
    createExponent: ["left", 0] | ["right", 1];
    createPrefixPlus: ["operand", 0];
    createPrefixMinus: ["operand", 0];
    createPrefixIncrement: ["operand", 0];
    createPrefixDecrement: ["operand", 0];
    createBitwiseNot: ["operand", 0];
    createLogicalNot: ["operand", 0];
    createPostfixIncrement: ["operand", 0];
    createPostfixDecrement: ["operand", 0];
    createImmediatelyInvokedFunctionExpression: ["statements", 0] | ["param", 1] | ["paramValue", 2];
    createImmediatelyInvokedArrowFunction: ["statements", 0] | ["param", 1] | ["paramValue", 2];
    createVoidZero: undefined;
    createExportDefault: ["expression", 0];
    createExternalModuleExport: ["exportName", 0];
    createTypeCheck: ["value", 0] | ["tag", 1];
    createMethodCall: ["object", 0] | ["methodName", 1] | ["argumentsList", 2];
    createGlobalMethodCall: ["globalObjectName", 0] | ["methodName", 1] | ["argumentsList", 2];
    createFunctionBindCall: ["target", 0] | ["thisArg", 1] | ["argumentsList", 2];
    createFunctionCallCall: ["target", 0] | ["thisArg", 1] | ["argumentsList", 2];
    createFunctionApplyCall: ["target", 0] | ["thisArg", 1] | ["argumentsExpression", 2];
    createArraySliceCall: ["array", 0] | ["start", 1];
    createArrayConcatCall: ["array", 0] | ["argumentsList", 1];
    createObjectDefinePropertyCall: ["target", 0] | ["propertyName", 1] | ["attributes", 2];
    createReflectGetCall: ["target", 0] | ["propertyKey", 1] | ["receiver", 2];
    createReflectSetCall: ["target", 0] | ["propertyKey", 1] | ["value", 2] | ["receiver", 3];
    createPropertyDescriptor: ["attributes", 0] | ["singleLine", 1];
    createCallBinding: ["expression", 0] | ["recordTempVariable", 1] | ["languageVersion", 2] | ["cacheIdentifiers", 3];
    createAssignmentTargetWrapper: ["paramName", 0] | ["expression", 1];
    inlineExpressions: ["expressions", 0];
    getInternalName: ["node", 0] | ["allowComments", 1] | ["allowSourceMaps", 2];
    getLocalName: ["node", 0] | ["allowComments", 1] | ["allowSourceMaps", 2];
    getExportName: ["node", 0] | ["allowComments", 1] | ["allowSourceMaps", 2];
    getDeclarationName: ["node", 0] | ["allowComments", 1] | ["allowSourceMaps", 2];
    getNamespaceMemberName: ["ns", 0] | ["name", 1] | ["allowComments", 2] | ["allowSourceMaps", 3];
    getExternalModuleOrNamespaceExportName: ["ns", 0] | ["node", 1] | ["allowComments", 2] | ["allowSourceMaps", 3];
    restoreOuterExpressions: ["outerExpression", 0] | ["innerExpression", 1] | ["kinds", 2];
    restoreEnclosingLabel: ["node", 0] | ["outermostLabeledStatement", 1] | ["afterRestoreLabelCallback", 2];
    createUseStrictPrologue: undefined;
    copyPrologue: ["source", 0] | ["target", 1] | ["ensureUseStrict", 2] | ["visitor", 3];
    copyStandardPrologue: ["source", 0] | ["target", 1] | ["statementOffset", 2] | ["ensureUseStrict", 3];
    copyCustomPrologue: ["source", 0] | ["target", 1] | ["statementOffset", 2] | ["visitor", 3] | ["filter", 4];
    ensureUseStrict: ["statements", 0];
    liftToBlock: ["nodes", 0];
    mergeLexicalEnvironment: ["statements", 0] | ["declarations", 1];
    updateModifiers: ["node", 0] | ["modifiers", 1];
}
export declare const ArgKeys: {
    createNodeArray: string[];
    createNumericLiteral: string[];
    createBigIntLiteral: string[];
    createStringLiteral: string[];
    createStringLiteralFromNode: string[];
    createRegularExpressionLiteral: string[];
    createLiteralLikeNode: string[];
    createIdentifier: string[];
    updateIdentifier: string[];
    createTempVariable: string[];
    createLoopVariable: string[];
    createUniqueName: string[];
    getGeneratedNameForNode: string[];
    createPrivateIdentifier: string[];
    createToken: string[];
    createSuper: any[];
    createThis: any[];
    createNull: any[];
    createTrue: any[];
    createFalse: any[];
    createModifier: string[];
    createModifiersFromModifierFlags: string[];
    createQualifiedName: string[];
    updateQualifiedName: string[];
    createComputedPropertyName: string[];
    updateComputedPropertyName: string[];
    createTypeParameterDeclaration: string[];
    updateTypeParameterDeclaration: string[];
    createParameterDeclaration: string[];
    updateParameterDeclaration: string[];
    createDecorator: string[];
    updateDecorator: string[];
    createPropertySignature: string[];
    updatePropertySignature: string[];
    createPropertyDeclaration: string[];
    updatePropertyDeclaration: string[];
    createMethodSignature: string[];
    updateMethodSignature: string[];
    createMethodDeclaration: string[];
    updateMethodDeclaration: string[];
    createConstructorDeclaration: string[];
    updateConstructorDeclaration: string[];
    createGetAccessorDeclaration: string[];
    updateGetAccessorDeclaration: string[];
    createSetAccessorDeclaration: string[];
    updateSetAccessorDeclaration: string[];
    createCallSignature: string[];
    updateCallSignature: string[];
    createConstructSignature: string[];
    updateConstructSignature: string[];
    createIndexSignature: string[];
    updateIndexSignature: string[];
    createClassStaticBlockDeclaration: string[];
    updateClassStaticBlockDeclaration: string[];
    createTemplateLiteralTypeSpan: string[];
    updateTemplateLiteralTypeSpan: string[];
    createKeywordTypeNode: string[];
    createTypePredicateNode: string[];
    updateTypePredicateNode: string[];
    createTypeReferenceNode: string[];
    updateTypeReferenceNode: string[];
    createFunctionTypeNode: string[];
    updateFunctionTypeNode: string[];
    createConstructorTypeNode: any[];
    updateConstructorTypeNode: any[];
    createTypeQueryNode: string[];
    updateTypeQueryNode: string[];
    createTypeLiteralNode: string[];
    updateTypeLiteralNode: string[];
    createArrayTypeNode: string[];
    updateArrayTypeNode: string[];
    createTupleTypeNode: string[];
    updateTupleTypeNode: string[];
    createNamedTupleMember: string[];
    updateNamedTupleMember: string[];
    createOptionalTypeNode: string[];
    updateOptionalTypeNode: string[];
    createRestTypeNode: string[];
    updateRestTypeNode: string[];
    createUnionTypeNode: string[];
    updateUnionTypeNode: string[];
    createIntersectionTypeNode: string[];
    updateIntersectionTypeNode: string[];
    createConditionalTypeNode: string[];
    updateConditionalTypeNode: string[];
    createInferTypeNode: string[];
    updateInferTypeNode: string[];
    createImportTypeNode: string[];
    updateImportTypeNode: string[];
    createParenthesizedType: string[];
    updateParenthesizedType: string[];
    createThisTypeNode: any[];
    createTypeOperatorNode: string[];
    updateTypeOperatorNode: string[];
    createIndexedAccessTypeNode: string[];
    updateIndexedAccessTypeNode: string[];
    createMappedTypeNode: string[];
    updateMappedTypeNode: string[];
    createLiteralTypeNode: string[];
    updateLiteralTypeNode: string[];
    createTemplateLiteralType: string[];
    updateTemplateLiteralType: string[];
    createObjectBindingPattern: string[];
    updateObjectBindingPattern: string[];
    createArrayBindingPattern: string[];
    updateArrayBindingPattern: string[];
    createBindingElement: string[];
    updateBindingElement: string[];
    createArrayLiteralExpression: string[];
    updateArrayLiteralExpression: string[];
    createObjectLiteralExpression: string[];
    updateObjectLiteralExpression: string[];
    createPropertyAccessExpression: string[];
    updatePropertyAccessExpression: string[];
    createPropertyAccessChain: string[];
    updatePropertyAccessChain: string[];
    createElementAccessExpression: string[];
    updateElementAccessExpression: string[];
    createElementAccessChain: string[];
    updateElementAccessChain: string[];
    createCallExpression: string[];
    updateCallExpression: string[];
    createCallChain: string[];
    updateCallChain: string[];
    createNewExpression: string[];
    updateNewExpression: string[];
    createTaggedTemplateExpression: string[];
    updateTaggedTemplateExpression: string[];
    createTypeAssertion: string[];
    updateTypeAssertion: string[];
    createParenthesizedExpression: string[];
    updateParenthesizedExpression: string[];
    createFunctionExpression: string[];
    updateFunctionExpression: string[];
    createArrowFunction: string[];
    updateArrowFunction: string[];
    createDeleteExpression: string[];
    updateDeleteExpression: string[];
    createTypeOfExpression: string[];
    updateTypeOfExpression: string[];
    createVoidExpression: string[];
    updateVoidExpression: string[];
    createAwaitExpression: string[];
    updateAwaitExpression: string[];
    createPrefixUnaryExpression: string[];
    updatePrefixUnaryExpression: string[];
    createPostfixUnaryExpression: string[];
    updatePostfixUnaryExpression: string[];
    createBinaryExpression: string[];
    updateBinaryExpression: string[];
    createConditionalExpression: string[];
    updateConditionalExpression: string[];
    createTemplateExpression: string[];
    updateTemplateExpression: string[];
    createTemplateHead: string[];
    createTemplateMiddle: string[];
    createTemplateTail: string[];
    createNoSubstitutionTemplateLiteral: string[];
    createTemplateLiteralLikeNode: string[];
    createYieldExpression: string[];
    updateYieldExpression: string[];
    createSpreadElement: string[];
    updateSpreadElement: string[];
    createClassExpression: string[];
    updateClassExpression: string[];
    createOmittedExpression: any[];
    createExpressionWithTypeArguments: string[];
    updateExpressionWithTypeArguments: string[];
    createAsExpression: string[];
    updateAsExpression: string[];
    createNonNullExpression: string[];
    updateNonNullExpression: string[];
    createNonNullChain: string[];
    updateNonNullChain: string[];
    createMetaProperty: string[];
    updateMetaProperty: string[];
    createTemplateSpan: string[];
    updateTemplateSpan: string[];
    createSemicolonClassElement: any[];
    createBlock: string[];
    updateBlock: string[];
    createVariableStatement: string[];
    updateVariableStatement: string[];
    createEmptyStatement: any[];
    createExpressionStatement: string[];
    updateExpressionStatement: string[];
    createIfStatement: string[];
    updateIfStatement: string[];
    createDoStatement: string[];
    updateDoStatement: string[];
    createWhileStatement: string[];
    updateWhileStatement: string[];
    createForStatement: string[];
    updateForStatement: string[];
    createForInStatement: string[];
    updateForInStatement: string[];
    createForOfStatement: string[];
    updateForOfStatement: string[];
    createContinueStatement: string[];
    updateContinueStatement: string[];
    createBreakStatement: string[];
    updateBreakStatement: string[];
    createReturnStatement: string[];
    updateReturnStatement: string[];
    createWithStatement: string[];
    updateWithStatement: string[];
    createSwitchStatement: string[];
    updateSwitchStatement: string[];
    createLabeledStatement: string[];
    updateLabeledStatement: string[];
    createThrowStatement: string[];
    updateThrowStatement: string[];
    createTryStatement: string[];
    updateTryStatement: string[];
    createDebuggerStatement: any[];
    createVariableDeclaration: string[];
    updateVariableDeclaration: string[];
    createVariableDeclarationList: string[];
    updateVariableDeclarationList: string[];
    createFunctionDeclaration: string[];
    updateFunctionDeclaration: string[];
    createClassDeclaration: string[];
    updateClassDeclaration: string[];
    createInterfaceDeclaration: string[];
    updateInterfaceDeclaration: string[];
    createTypeAliasDeclaration: string[];
    updateTypeAliasDeclaration: string[];
    createEnumDeclaration: string[];
    updateEnumDeclaration: string[];
    createModuleDeclaration: string[];
    updateModuleDeclaration: string[];
    createModuleBlock: string[];
    updateModuleBlock: string[];
    createCaseBlock: string[];
    updateCaseBlock: string[];
    createNamespaceExportDeclaration: string[];
    updateNamespaceExportDeclaration: string[];
    createImportEqualsDeclaration: string[];
    updateImportEqualsDeclaration: string[];
    createImportDeclaration: string[];
    updateImportDeclaration: string[];
    createImportClause: string[];
    updateImportClause: string[];
    createAssertClause: string[];
    updateAssertClause: string[];
    createAssertEntry: string[];
    updateAssertEntry: string[];
    createNamespaceImport: string[];
    updateNamespaceImport: string[];
    createNamespaceExport: string[];
    updateNamespaceExport: string[];
    createNamedImports: string[];
    updateNamedImports: string[];
    createImportSpecifier: string[];
    updateImportSpecifier: string[];
    createExportAssignment: string[];
    updateExportAssignment: string[];
    createExportDeclaration: string[];
    updateExportDeclaration: string[];
    createNamedExports: string[];
    updateNamedExports: string[];
    createExportSpecifier: string[];
    updateExportSpecifier: string[];
    createMissingDeclaration: any[];
    createExternalModuleReference: string[];
    updateExternalModuleReference: string[];
    createJSDocAllType: any[];
    createJSDocUnknownType: any[];
    createJSDocNonNullableType: string[];
    updateJSDocNonNullableType: string[];
    createJSDocNullableType: string[];
    updateJSDocNullableType: string[];
    createJSDocOptionalType: string[];
    updateJSDocOptionalType: string[];
    createJSDocVariadicType: string[];
    updateJSDocVariadicType: string[];
    createJSDocNamepathType: string[];
    updateJSDocNamepathType: string[];
    createJSDocFunctionType: string[];
    updateJSDocFunctionType: string[];
    createJSDocTypeLiteral: string[];
    updateJSDocTypeLiteral: string[];
    createJSDocTypeExpression: string[];
    updateJSDocTypeExpression: string[];
    createJSDocSignature: string[];
    updateJSDocSignature: string[];
    createJSDocTemplateTag: string[];
    updateJSDocTemplateTag: string[];
    createJSDocTypedefTag: string[];
    updateJSDocTypedefTag: string[];
    createJSDocParameterTag: string[];
    updateJSDocParameterTag: string[];
    createJSDocPropertyTag: string[];
    updateJSDocPropertyTag: string[];
    createJSDocCallbackTag: string[];
    updateJSDocCallbackTag: string[];
    createJSDocAugmentsTag: string[];
    updateJSDocAugmentsTag: string[];
    createJSDocImplementsTag: string[];
    updateJSDocImplementsTag: string[];
    createJSDocSeeTag: string[];
    updateJSDocSeeTag: string[];
    createJSDocNameReference: string[];
    updateJSDocNameReference: string[];
    createJSDocMemberName: string[];
    updateJSDocMemberName: string[];
    createJSDocLink: string[];
    updateJSDocLink: string[];
    createJSDocLinkCode: string[];
    updateJSDocLinkCode: string[];
    createJSDocLinkPlain: string[];
    updateJSDocLinkPlain: string[];
    createJSDocTypeTag: string[];
    updateJSDocTypeTag: string[];
    createJSDocReturnTag: string[];
    updateJSDocReturnTag: string[];
    createJSDocThisTag: string[];
    updateJSDocThisTag: string[];
    createJSDocEnumTag: string[];
    updateJSDocEnumTag: string[];
    createJSDocAuthorTag: string[];
    updateJSDocAuthorTag: string[];
    createJSDocClassTag: string[];
    updateJSDocClassTag: string[];
    createJSDocPublicTag: string[];
    updateJSDocPublicTag: string[];
    createJSDocPrivateTag: string[];
    updateJSDocPrivateTag: string[];
    createJSDocProtectedTag: string[];
    updateJSDocProtectedTag: string[];
    createJSDocReadonlyTag: string[];
    updateJSDocReadonlyTag: string[];
    createJSDocOverrideTag: string[];
    updateJSDocOverrideTag: string[];
    createJSDocDeprecatedTag: string[];
    updateJSDocDeprecatedTag: string[];
    createJSDocUnknownTag: string[];
    updateJSDocUnknownTag: string[];
    createJSDocText: string[];
    updateJSDocText: string[];
    createJSDocComment: string[];
    updateJSDocComment: string[];
    createJsxElement: string[];
    updateJsxElement: string[];
    createJsxSelfClosingElement: string[];
    updateJsxSelfClosingElement: string[];
    createJsxOpeningElement: string[];
    updateJsxOpeningElement: string[];
    createJsxClosingElement: string[];
    updateJsxClosingElement: string[];
    createJsxFragment: string[];
    createJsxText: string[];
    updateJsxText: string[];
    createJsxOpeningFragment: any[];
    createJsxJsxClosingFragment: any[];
    updateJsxFragment: string[];
    createJsxAttribute: string[];
    updateJsxAttribute: string[];
    createJsxAttributes: string[];
    updateJsxAttributes: string[];
    createJsxSpreadAttribute: string[];
    updateJsxSpreadAttribute: string[];
    createJsxExpression: string[];
    updateJsxExpression: string[];
    createCaseClause: string[];
    updateCaseClause: string[];
    createDefaultClause: string[];
    updateDefaultClause: string[];
    createHeritageClause: string[];
    updateHeritageClause: string[];
    createCatchClause: string[];
    updateCatchClause: string[];
    createPropertyAssignment: string[];
    updatePropertyAssignment: string[];
    createShorthandPropertyAssignment: string[];
    updateShorthandPropertyAssignment: string[];
    createSpreadAssignment: string[];
    updateSpreadAssignment: string[];
    createEnumMember: string[];
    updateEnumMember: string[];
    createSourceFile: string[];
    updateSourceFile: string[];
    createBundle: string[];
    updateBundle: string[];
    createUnparsedSource: string[];
    createUnparsedPrologue: string[];
    createUnparsedPrepend: string[];
    createUnparsedTextLike: string[];
    createUnparsedSyntheticReference: string[];
    createInputFiles: any[];
    createSyntheticExpression: string[];
    createSyntaxList: string[];
    createNotEmittedStatement: string[];
    createPartiallyEmittedExpression: string[];
    updatePartiallyEmittedExpression: string[];
    createCommaListExpression: string[];
    updateCommaListExpression: string[];
    createEndOfDeclarationMarker: string[];
    createMergeDeclarationMarker: string[];
    createSyntheticReferenceExpression: string[];
    updateSyntheticReferenceExpression: string[];
    cloneNode: string[];
    createComma: string[];
    createAssignment: string[];
    createLogicalOr: string[];
    createLogicalAnd: string[];
    createBitwiseOr: string[];
    createBitwiseXor: string[];
    createBitwiseAnd: string[];
    createStrictEquality: string[];
    createStrictInequality: string[];
    createEquality: string[];
    createInequality: string[];
    createLessThan: string[];
    createLessThanEquals: string[];
    createGreaterThan: string[];
    createGreaterThanEquals: string[];
    createLeftShift: string[];
    createRightShift: string[];
    createUnsignedRightShift: string[];
    createAdd: string[];
    createSubtract: string[];
    createMultiply: string[];
    createDivide: string[];
    createModulo: string[];
    createExponent: string[];
    createPrefixPlus: string[];
    createPrefixMinus: string[];
    createPrefixIncrement: string[];
    createPrefixDecrement: string[];
    createBitwiseNot: string[];
    createLogicalNot: string[];
    createPostfixIncrement: string[];
    createPostfixDecrement: string[];
    createImmediatelyInvokedFunctionExpression: string[];
    createImmediatelyInvokedArrowFunction: string[];
    createVoidZero: any[];
    createExportDefault: string[];
    createExternalModuleExport: string[];
    createTypeCheck: string[];
    createMethodCall: string[];
    createGlobalMethodCall: string[];
    createFunctionBindCall: string[];
    createFunctionCallCall: string[];
    createFunctionApplyCall: string[];
    createArraySliceCall: string[];
    createArrayConcatCall: string[];
    createObjectDefinePropertyCall: string[];
    createReflectGetCall: string[];
    createReflectSetCall: string[];
    createPropertyDescriptor: string[];
    createCallBinding: string[];
    createAssignmentTargetWrapper: string[];
    inlineExpressions: string[];
    getInternalName: string[];
    getLocalName: string[];
    getExportName: string[];
    getDeclarationName: string[];
    getNamespaceMemberName: string[];
    getExternalModuleOrNamespaceExportName: string[];
    restoreOuterExpressions: string[];
    restoreEnclosingLabel: string[];
    createUseStrictPrologue: any[];
    copyPrologue: string[];
    copyStandardPrologue: string[];
    copyCustomPrologue: string[];
    ensureUseStrict: string[];
    liftToBlock: string[];
    mergeLexicalEnvironment: string[];
    updateModifiers: string[];
};
